---
import { fetchSanity } from "@/lib/sanity"; // fetch fonksiyonun
import { slugify } from "@/lib/utils/textConverter";

/**
 * Belirli bir taxonomy tipinden (örneğin "categories") benzersiz slug listesi getirir.
 */
export const getTaxonomy = async (taxonomyField: string) => {
  const query = `*[_type == "post"]{ "${taxonomyField}": ${taxonomyField}[] }`;
  const posts = await fetchSanity(query);

  const allItems: string[] = [];

  posts.forEach((post: any) => {
    const items = post[taxonomyField];
    if (items && Array.isArray(items)) {
      items.forEach((item: string) => {
        if (item) {
          allItems.push(slugify(item)!);
        }
      });
    }
  });

  const uniqueItems = [...new Set(allItems)];
  return uniqueItems;
};

/**
 * Tekil olmayan tüm taxonomy verilerini getirir (örneğin tüm etiketler).
 */
export const getAllTaxonomy = async (taxonomyField: string) => {
  const query = `*[_type == "post"]{ "${taxonomyField}": ${taxonomyField}[] }`;
  const posts = await fetchSanity(query);

  const allItems: string[] = [];

  posts.forEach((post: any) => {
    const items = post[taxonomyField];
    if (items && Array.isArray(items)) {
      items.forEach((item: string) => {
        if (item) {
          allItems.push(slugify(item)!);
        }
      });
    }
  });

  return allItems;
};

---
